/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APrograma extends PPrograma
{
    private PProgramaInicio _programaInicio_;
    private PDeclaracaoOp _declaracaoOp_;
    private PComandoOp _comandoOp_;
    private TFimPrograma _fimPrograma_;

    public APrograma()
    {
        // Constructor
    }

    public APrograma(
        @SuppressWarnings("hiding") PProgramaInicio _programaInicio_,
        @SuppressWarnings("hiding") PDeclaracaoOp _declaracaoOp_,
        @SuppressWarnings("hiding") PComandoOp _comandoOp_,
        @SuppressWarnings("hiding") TFimPrograma _fimPrograma_)
    {
        // Constructor
        setProgramaInicio(_programaInicio_);

        setDeclaracaoOp(_declaracaoOp_);

        setComandoOp(_comandoOp_);

        setFimPrograma(_fimPrograma_);

    }

    @Override
    public Object clone()
    {
        return new APrograma(
            cloneNode(this._programaInicio_),
            cloneNode(this._declaracaoOp_),
            cloneNode(this._comandoOp_),
            cloneNode(this._fimPrograma_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrograma(this);
    }

    public PProgramaInicio getProgramaInicio()
    {
        return this._programaInicio_;
    }

    public void setProgramaInicio(PProgramaInicio node)
    {
        if(this._programaInicio_ != null)
        {
            this._programaInicio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._programaInicio_ = node;
    }

    public PDeclaracaoOp getDeclaracaoOp()
    {
        return this._declaracaoOp_;
    }

    public void setDeclaracaoOp(PDeclaracaoOp node)
    {
        if(this._declaracaoOp_ != null)
        {
            this._declaracaoOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaracaoOp_ = node;
    }

    public PComandoOp getComandoOp()
    {
        return this._comandoOp_;
    }

    public void setComandoOp(PComandoOp node)
    {
        if(this._comandoOp_ != null)
        {
            this._comandoOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandoOp_ = node;
    }

    public TFimPrograma getFimPrograma()
    {
        return this._fimPrograma_;
    }

    public void setFimPrograma(TFimPrograma node)
    {
        if(this._fimPrograma_ != null)
        {
            this._fimPrograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimPrograma_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._programaInicio_)
            + toString(this._declaracaoOp_)
            + toString(this._comandoOp_)
            + toString(this._fimPrograma_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._programaInicio_ == child)
        {
            this._programaInicio_ = null;
            return;
        }

        if(this._declaracaoOp_ == child)
        {
            this._declaracaoOp_ = null;
            return;
        }

        if(this._comandoOp_ == child)
        {
            this._comandoOp_ = null;
            return;
        }

        if(this._fimPrograma_ == child)
        {
            this._fimPrograma_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._programaInicio_ == oldChild)
        {
            setProgramaInicio((PProgramaInicio) newChild);
            return;
        }

        if(this._declaracaoOp_ == oldChild)
        {
            setDeclaracaoOp((PDeclaracaoOp) newChild);
            return;
        }

        if(this._comandoOp_ == oldChild)
        {
            setComandoOp((PComandoOp) newChild);
            return;
        }

        if(this._fimPrograma_ == oldChild)
        {
            setFimPrograma((TFimPrograma) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
