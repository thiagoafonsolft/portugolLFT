/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APassoComando extends PComando
{
    private PParaInicio _paraInicio_;
    private TPasso _passo_;
    private TNInteiro _nInteiro_;
    private PParaFim _paraFim_;

    public APassoComando()
    {
        // Constructor
    }

    public APassoComando(
        @SuppressWarnings("hiding") PParaInicio _paraInicio_,
        @SuppressWarnings("hiding") TPasso _passo_,
        @SuppressWarnings("hiding") TNInteiro _nInteiro_,
        @SuppressWarnings("hiding") PParaFim _paraFim_)
    {
        // Constructor
        setParaInicio(_paraInicio_);

        setPasso(_passo_);

        setNInteiro(_nInteiro_);

        setParaFim(_paraFim_);

    }

    @Override
    public Object clone()
    {
        return new APassoComando(
            cloneNode(this._paraInicio_),
            cloneNode(this._passo_),
            cloneNode(this._nInteiro_),
            cloneNode(this._paraFim_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPassoComando(this);
    }

    public PParaInicio getParaInicio()
    {
        return this._paraInicio_;
    }

    public void setParaInicio(PParaInicio node)
    {
        if(this._paraInicio_ != null)
        {
            this._paraInicio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paraInicio_ = node;
    }

    public TPasso getPasso()
    {
        return this._passo_;
    }

    public void setPasso(TPasso node)
    {
        if(this._passo_ != null)
        {
            this._passo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passo_ = node;
    }

    public TNInteiro getNInteiro()
    {
        return this._nInteiro_;
    }

    public void setNInteiro(TNInteiro node)
    {
        if(this._nInteiro_ != null)
        {
            this._nInteiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nInteiro_ = node;
    }

    public PParaFim getParaFim()
    {
        return this._paraFim_;
    }

    public void setParaFim(PParaFim node)
    {
        if(this._paraFim_ != null)
        {
            this._paraFim_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paraFim_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._paraInicio_)
            + toString(this._passo_)
            + toString(this._nInteiro_)
            + toString(this._paraFim_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._paraInicio_ == child)
        {
            this._paraInicio_ = null;
            return;
        }

        if(this._passo_ == child)
        {
            this._passo_ = null;
            return;
        }

        if(this._nInteiro_ == child)
        {
            this._nInteiro_ = null;
            return;
        }

        if(this._paraFim_ == child)
        {
            this._paraFim_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._paraInicio_ == oldChild)
        {
            setParaInicio((PParaInicio) newChild);
            return;
        }

        if(this._passo_ == oldChild)
        {
            setPasso((TPasso) newChild);
            return;
        }

        if(this._nInteiro_ == oldChild)
        {
            setNInteiro((TNInteiro) newChild);
            return;
        }

        if(this._paraFim_ == oldChild)
        {
            setParaFim((PParaFim) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
