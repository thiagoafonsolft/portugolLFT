/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AListaExpViruglaLista extends PExpViruglaLista
{
    private PExpViruglaLista _expViruglaLista_;
    private PExpVirgula _expVirgula_;

    public AListaExpViruglaLista()
    {
        // Constructor
    }

    public AListaExpViruglaLista(
        @SuppressWarnings("hiding") PExpViruglaLista _expViruglaLista_,
        @SuppressWarnings("hiding") PExpVirgula _expVirgula_)
    {
        // Constructor
        setExpViruglaLista(_expViruglaLista_);

        setExpVirgula(_expVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AListaExpViruglaLista(
            cloneNode(this._expViruglaLista_),
            cloneNode(this._expVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaExpViruglaLista(this);
    }

    public PExpViruglaLista getExpViruglaLista()
    {
        return this._expViruglaLista_;
    }

    public void setExpViruglaLista(PExpViruglaLista node)
    {
        if(this._expViruglaLista_ != null)
        {
            this._expViruglaLista_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expViruglaLista_ = node;
    }

    public PExpVirgula getExpVirgula()
    {
        return this._expVirgula_;
    }

    public void setExpVirgula(PExpVirgula node)
    {
        if(this._expVirgula_ != null)
        {
            this._expVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expViruglaLista_)
            + toString(this._expVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expViruglaLista_ == child)
        {
            this._expViruglaLista_ = null;
            return;
        }

        if(this._expVirgula_ == child)
        {
            this._expVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expViruglaLista_ == oldChild)
        {
            setExpViruglaLista((PExpViruglaLista) newChild);
            return;
        }

        if(this._expVirgula_ == oldChild)
        {
            setExpVirgula((PExpVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
