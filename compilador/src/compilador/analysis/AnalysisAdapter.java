/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import java.util.*;
import compilador.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramaInicio(AProgramaInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaDeclaracaoOp(AListaDeclaracaoOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyDeclaracaoOp(AEmptyDeclaracaoOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaComandoOp(AListaComandoOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyComandoOp(AEmptyComandoOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecListaDeclaracaoLista(ADecListaDeclaracaoLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoDeclaracaoLista(ADeclaracaoDeclaracaoLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComListaComandoLista(AComListaComandoLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoComandoLista(AComandoComandoLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoDeclaracao(ATipoDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConstDeclaracao(AConstDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipo(ARealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInteiroTipo(AInteiroTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACaractereTipo(ACaractereTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdVar(AIdVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorVar(AVetorVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaVarVirgulaOp(AListaVarVirgulaOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyVarVirgulaOp(AEmptyVarVirgulaOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgulaListaVarVirgulaLista(AVirgulaListaVarVirgulaLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarVirgulaVarVirgulaLista(AVarVirgulaVarVirgulaLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarVirgula(AVarVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringValor(AStringValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANRealValor(ANRealValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANInteiroValor(ANInteiroValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoComando(AAtribuicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeiaComando(ALeiaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEscrevaComando(AEscrevaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComando(ASeComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvalieComando(AAvalieComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComando(AEnquantoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaComando(ARepitaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaComando(AParaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPassoComando(APassoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaComandoOpLista(AListaComandoOpLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoComandoOpLista(AComandoComandoOpLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoSenaoOp(ASenaoSenaoOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptySenaoOp(AEmptySenaoOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoSenaoDoispontosOp(ASenaoSenaoDoispontosOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptySenaoDoispontosOp(AEmptySenaoDoispontosOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoComando(ASenaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoDoispontos(ASenaoDoispontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasoCasoValorOp(ACasoCasoValorOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyCasoValorOp(AEmptyCasoValorOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasoValorListaCasoValorLista(ACasoValorListaCasoValorLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasoValorCasoValorLista(ACasoValorCasoValorLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasoValor(ACasoValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaInicio(AParaInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaFim(AParaFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaExpExp(ASomaExpExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtracaoexpExp(ASubtracaoexpExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpLogicaExp(AExpLogicaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaRelacional(ASomaRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaSomaExp(ASomaSomaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoSomaExp(ATermoSomaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultTermo(AMultTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorTermo(AFatorTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirgulaExpVirgulaOp(AVirgulaExpVirgulaOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyExpVirgulaOp(AEmptyExpVirgulaOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaExpViruglaLista(AListaExpViruglaLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpVirgulaExpViruglaLista(AExpVirgulaExpViruglaLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpVirgula(AExpVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaExpLogicaLista(AListaExpLogicaLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpLogicaExpLogicaLista(AExpLogicaExpLogicaLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelacionalExpLogica(ARelacionalExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegacaoExpLogica(ANegacaoExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALogicoExpLogica(ALogicoExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpLogicaOriginal(AExpLogicaOriginal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdicaoSoma(AAdicaoSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtracaoSoma(ASubtracaoSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicacaoMult(AMultiplicacaoMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivisaoMult(ADivisaoMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALogicoEouxor(ALogicoEouxor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEOpLogico(AEOpLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuOpLogico(AOuOpLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorOpLogico(AXorOpLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualRelacional(AIgualRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferenteRelacional(ADiferenteRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorigualRelacional(AMenorigualRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorigualRelacional(AMaiorigualRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorRelacional(AMenorRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorRelacional(AMaiorRelacional node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpFator(AExpFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorFator(AValorFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarFator(AVarFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioFim(TComentarioFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioCorpo(TComentarioCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBranco(TBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrograma(TPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimPrograma(TFimPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoispontos(TDoispontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontovirgula(TPontovirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbrecolchete(TAbrecolchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechacolchete(TFechacolchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreparentese(TAbreparentese node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaparentese(TFechaparentese node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNInteiro(TNInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNReal(TNReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdicao(TAdicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSubtracao(TSubtracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMultiplicacao(TMultiplicacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivisao(TDivisao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeia(TLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscreva(TEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimse(TFimse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimenquanto(TFimenquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaca(TFaca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRepita(TRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDe(TDe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAte(TAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAvalie(TAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimavalie(TFimavalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaso(TCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimpara(TFimpara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPasso(TPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorigual(TMenorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorigual(TMaiorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNegacao(TNegacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
